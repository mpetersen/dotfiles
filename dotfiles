#!/bin/bash
# .dotfiles installation script for Mac OS X

base_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

function pause {
    read -p "Press [Enter] to continue..."
}

function log {
    echo "=== $1 ==="
}

function cmd_help {
    bold=$(tput bold)
    normal=$(tput sgr0)

    cat << EOF
dotfiles organizes your Mac OS X dotfiles

usage: dotfiles [<flag>] <command>

Available flags are:
  --filevault   Enables FileVault when used in combination with the setup
                command (${bold}experimental!${normal})
  --nolink      Disables dotfiles linking in combination with the update
                command
  --noinstall   Disables installer execution in combination with the
                update commnand

Available commands are:
  help          Prints this help text
  setup         Sets up dotfiles and the environment on the current system.
                This should be usually called only once
  update        Updates the dotfiles and the environment setup
  unlink        Unlinks the dotfiles so you can safely remove the .dotfiles
                repository


Copyright 2015 by Moritz Petersen


EOF
}

function cmd_setup {
    if [ $enable_filevault ]; then
        log "Enable FileVault - WARNING: experimental!"
        sudo fdesetup enable -verbose -user `whoami`
        pause
    fi

    log "Install developer tools"
    xcode-select --install &> /dev/null

    log "Install Homebrew"
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

    log "Install Homebrew Cask"
    brew install caskroom/cask/brew-cask

    log "Install Homebrew Versions"
    brew tap homebrew/versions

    log "Install Homebrew Fonts"
    brew tap caskroom/fonts

    log "Install Homebrew Completions"
    brew tap homebrew/completions

    log "Execute update command"
    cmd_update
}

function cmd_update {
    log "Update App Store software"
    softwareupdate -ia

    if [ !$enable_noinstall ]; then
        # Install
        local installers=(
            brew-cask
            brew
            brew-fonts
            atom
            safari
            node
            dock
            osx-defaults
        )

        for installer in "${installers[@]}"; do
            log "Execute $installer installer"
            $base_dir/install/$installer
        done
    fi

    if [ !$enable_nolink ]; then
        log "Link dotfiles"
        for dotfile in $( $base_dir/repo ); do
            ln -s ~/.$dotfile $base_dir/repo/$dotfile
        done
    fi

    source ~/.bash_profile
}

function cmd_unlink {
    echo ">> ${FUNCNAME[0]}"
}

# Available flags; passed as arguments with '--' prefix, e.g. --filevault
# Will be mapped to variables with the prefix 'enable_', e.g.
# enable_filevault
flags=(
    filevault
    nolink
    noinstall
)

# Available commands; corresponding command function is prefixed with
# 'cmd_', e.g. cmd_help
commands=( help setup update unlink )

log "Default command is 'help'"
command=help
for arg in $@; do
    for f in "${flags[@]}"; do
        if [ "$arg" = "--$f" ]; then
            declare enable_$f=true
        fi
    done
    for c in "${commands[@]}"; do
        if [ "$arg" = "$c" ]; then
            command=$c
        fi
    done
done

log "Extend sudo timeout (when not executing help command)"
if [ $command != "help" ]; then
    sudo -v
fi

log "Execute $command command"
cmd_$command
